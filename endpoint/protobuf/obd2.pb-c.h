/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: obd2.proto */

#ifndef PROTOBUF_C_obd2_2eproto__INCLUDED
#define PROTOBUF_C_obd2_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct _Obd2__OBD2Data Obd2__OBD2Data;
typedef struct _Obd2__OBD2MsgStruct Obd2__OBD2MsgStruct;
typedef struct _Obd2__MsgStruct Obd2__MsgStruct;

/* --- enums --- */

/* --- messages --- */

struct _Obd2__OBD2Data {
  ProtobufCMessage base;
  char *vin;
  uint32_t engine_load;
  uint32_t engine_coolant_temperature;
  uint32_t fuel_pressure;
  uint32_t engine_speed;
  uint32_t vehicle_speed;
  uint32_t intake_air_temperature;
  uint32_t mass_air_flow;
  uint32_t fuel_tank_level_input;
  uint32_t absolute_barometric_pressure;
  uint32_t control_module_voltage;
  uint32_t throttle_position;
  uint32_t ambient_air_temperature;
  uint32_t relative_accelerator_pedal_position;
  uint32_t engine_oil_temperature;
  uint32_t engine_fuel_rate;
  uint32_t service_distance;
  uint32_t anti_lock_barking_active;
  uint32_t steering_wheel_angle;
  uint32_t position_of_doors;
  uint32_t right_left_turn_signal_light;
  uint32_t alternate_beam_head_light;
  uint32_t high_beam_head_light;
};
#define OBD2__OBD2_DATA__INIT                                                                           \
  {                                                                                                     \
    PROTOBUF_C_MESSAGE_INIT(&obd2__obd2_data__descriptor)                                               \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 \
  }

struct _Obd2__OBD2MsgStruct {
  ProtobufCMessage base;
  uint64_t timestamp;
  char *deviceid;
  Obd2__OBD2Data *obd2_data;
};
#define OBD2__OBD2_MSG_STRUCT__INIT                             \
  {                                                             \
    PROTOBUF_C_MESSAGE_INIT(&obd2__obd2_msg_struct__descriptor) \
    , 0, (char *)protobuf_c_empty_string, NULL                  \
  }

struct _Obd2__MsgStruct {
  ProtobufCMessage base;
  ProtobufCBinaryData hmac;
  ProtobufCBinaryData iv;
  ProtobufCBinaryData data;
};
#define OBD2__MSG_STRUCT__INIT                             \
  {                                                        \
    PROTOBUF_C_MESSAGE_INIT(&obd2__msg_struct__descriptor) \
    , {0, NULL}, {0, NULL}, { 0, NULL }                    \
  }

/* Obd2__OBD2Data methods */
void obd2__obd2_data__init(Obd2__OBD2Data *message);
size_t obd2__obd2_data__get_packed_size(const Obd2__OBD2Data *message);
size_t obd2__obd2_data__pack(const Obd2__OBD2Data *message, uint8_t *out);
size_t obd2__obd2_data__pack_to_buffer(const Obd2__OBD2Data *message, ProtobufCBuffer *buffer);
Obd2__OBD2Data *obd2__obd2_data__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void obd2__obd2_data__free_unpacked(Obd2__OBD2Data *message, ProtobufCAllocator *allocator);
/* Obd2__OBD2MsgStruct methods */
void obd2__obd2_msg_struct__init(Obd2__OBD2MsgStruct *message);
size_t obd2__obd2_msg_struct__get_packed_size(const Obd2__OBD2MsgStruct *message);
size_t obd2__obd2_msg_struct__pack(const Obd2__OBD2MsgStruct *message, uint8_t *out);
size_t obd2__obd2_msg_struct__pack_to_buffer(const Obd2__OBD2MsgStruct *message, ProtobufCBuffer *buffer);
Obd2__OBD2MsgStruct *obd2__obd2_msg_struct__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void obd2__obd2_msg_struct__free_unpacked(Obd2__OBD2MsgStruct *message, ProtobufCAllocator *allocator);
/* Obd2__MsgStruct methods */
void obd2__msg_struct__init(Obd2__MsgStruct *message);
size_t obd2__msg_struct__get_packed_size(const Obd2__MsgStruct *message);
size_t obd2__msg_struct__pack(const Obd2__MsgStruct *message, uint8_t *out);
size_t obd2__msg_struct__pack_to_buffer(const Obd2__MsgStruct *message, ProtobufCBuffer *buffer);
Obd2__MsgStruct *obd2__msg_struct__unpack(ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void obd2__msg_struct__free_unpacked(Obd2__MsgStruct *message, ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Obd2__OBD2Data_Closure)(const Obd2__OBD2Data *message, void *closure_data);
typedef void (*Obd2__OBD2MsgStruct_Closure)(const Obd2__OBD2MsgStruct *message, void *closure_data);
typedef void (*Obd2__MsgStruct_Closure)(const Obd2__MsgStruct *message, void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor obd2__obd2_data__descriptor;
extern const ProtobufCMessageDescriptor obd2__obd2_msg_struct__descriptor;
extern const ProtobufCMessageDescriptor obd2__msg_struct__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_obd2_2eproto__INCLUDED */
