executables:
{
    endpoint = ( endpointComp )
}

processes:
{
    run:
    {
        (endpoint)
    }
}

requires:
{
	file:
    {
        // needed for curl itself:
        /usr/lib/libcrypto.so.1.0.2 /lib/libcrypto.so.1.0.2
        /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
        
        /usr/lib/libssl.so.1.0.2 /usr/lib/
        
        /usr/bin/curl /usr/bin/curl
        /usr/lib/libcurl.so.4 /usr/lib/
    //  /tmp/libcurl.so.4   /usr/lib/  
  //      /usr/lib/libgnutls.so.28 /usr/lib/
   //     /usr/lib/libnettle.so.4 /usr/lib/
   //     /usr/lib/libhogweed.so.2 /usr/lib/
   //     /usr/lib/libgmp.so.10 /usr/lib/
        /lib/libz.so.1 /lib/

        // needed for networking:
        /lib/libnss_compat.so.2 /lib/
        /lib/libnss_files.so.2 /lib/
        /etc/nsswitch.conf /etc/
        /etc/hosts /etc/
        /etc/resolv.conf /etc/
        /lib/libnss_dns.so.2 /lib/
        /lib/libresolv.so.2 /lib/

        /bin/sh /bin/sh
        /bin/date /bin/date
    }
    device:
	{
		[rw] /dev/null /dev/null
        [r] /dev/urandom /dev/urandom
        [r] /dev/random /dev/random
	}
}

#if ${LEGATO_TARGET} = localhost
#else
bindings:
{
    endpoint.endpointComp.le_secStore -> secStore.le_secStore
    endpoint.endpointComp.le_sim -> modemService.le_sim
    endpoint.endpointComp.le_mdc -> modemService.le_mdc
    endpoint.endpointComp.le_data -> dataConnectionService.le_data
}
#endif

start: manual
sandboxed: false
